{"version":3,"sources":["logo.svg","configs.js","User.js","Teste.js","Product.js","App.js","serviceWorker.js","index.js","http/client/F1_index.js"],"names":["module","exports","config","process","REACT_APP_STAGE","apiGateway","KEY","URL","MAX_ATTACHMENT_SIZE","User","this","props","name","email","photo","src","Component","Teste","Product","state","data","id","client","get","then","response","produtos","setState","dados","detalhe","nome","list","map","product","App","className","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","console","log","REACT_APP_API_KEY","navigator","serviceWorker","ready","registration","unregister","axios","require","envProcess","create","baseURL","default","headers","timeout","interceptors","request","use","metadata","startTime","Date","error","Promise","reject","code","status"],"mappings":"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","file":"static/js/main.4b1c6d11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","const dev = {\n    apiGateway: {\n      KEY: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImUyYjE0MmZmYWZlNDUwNGIyNzVkMDNlZTA0N2Y1OGJhNDllOTA5MzM5YWU4OGY1OTBkYTkwZmVlMjNiY2UwNzRlYzIyZDRjYjU4YzM5YzQwIn0.eyJhdWQiOiIxMSIsImp0aSI6ImUyYjE0MmZmYWZlNDUwNGIyNzVkMDNlZTA0N2Y1OGJhNDllOTA5MzM5YWU4OGY1OTBkYTkwZmVlMjNiY2UwNzRlYzIyZDRjYjU4YzM5YzQwIiwiaWF0IjoxNTY3NzA5MjE5LCJuYmYiOjE1Njc3MDkyMTksImV4cCI6MTYzMDg2NzYxOSwic3ViIjoiIiwic2NvcGVzIjpbXX0.ZPsmq-s4iFCOAeNBh2Os5ftNodjE5CNmVJPv32KuruYVqhvTNTPGEXcaFFK_pkyXtkeq6YkaI7U69clRpqE4ZcmwDvvnrdG3x1WXDp4qB62srIMuvxU5oNVYJlrWqXU9xom4PKKEj0_wDiQUNGfvg8qCBae2D8IN0HVBFj-cQAgGu0QqRJLtwXcj75a27a6EcMhzAs-xCuS7wrxcUE_F83D1nbPVIWJZU91861ztOOPyR9t2YK0aVSxmrq1Abk32GbRqLa_8xnS1Zx9lATGitw1SwoIxW9b-tLjHOf4KtONu6nSKWxxI0UAtIaMHMdpUrOjQDsMPNQIEjqG-krYFwPnnCGXCoYJybRznB4ETGKmz1faKBnSsIwPSHMe-oMhIKy029q-VXD_Elm-EI3kK6kPqEUg9EtXEKfqqMo4s4y4jEGCTQlZpnCJkEpxzmZIjoDkpAZ-rV2ljblEQH1v_EUvABkqX9fMl3uOUzG8CJ1xnJRjM1NQF8S45jkrwwHb-N5eKbGnIWtYnoGMB7CglS3fEhP1pWAQ4DTjJ1UUv2N0pP-sOYIdNqAyHEmMVIHEp4e8y1VkxK0HyDtg6xnEGGad2HxC42nRxuhQl_ErrYqM5QJlSU-rHlFycazAkHaKZpVTq-GsIbZ_7V4WuTSQoC1P17rtDAf2wna2mfs9zzhw\",\n      URL: \"192.168.0.44:8080/f1webservices/public/api/front-api/\"\n    }\n  };\n  \n  const prod = {\n    apiGateway: {\n        KEY: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImUyYjE0MmZmYWZlNDUwNGIyNzVkMDNlZTA0N2Y1OGJhNDllOTA5MzM5YWU4OGY1OTBkYTkwZmVlMjNiY2UwNzRlYzIyZDRjYjU4YzM5YzQwIn0.eyJhdWQiOiIxMSIsImp0aSI6ImUyYjE0MmZmYWZlNDUwNGIyNzVkMDNlZTA0N2Y1OGJhNDllOTA5MzM5YWU4OGY1OTBkYTkwZmVlMjNiY2UwNzRlYzIyZDRjYjU4YzM5YzQwIiwiaWF0IjoxNTY3NzA5MjE5LCJuYmYiOjE1Njc3MDkyMTksImV4cCI6MTYzMDg2NzYxOSwic3ViIjoiIiwic2NvcGVzIjpbXX0.ZPsmq-s4iFCOAeNBh2Os5ftNodjE5CNmVJPv32KuruYVqhvTNTPGEXcaFFK_pkyXtkeq6YkaI7U69clRpqE4ZcmwDvvnrdG3x1WXDp4qB62srIMuvxU5oNVYJlrWqXU9xom4PKKEj0_wDiQUNGfvg8qCBae2D8IN0HVBFj-cQAgGu0QqRJLtwXcj75a27a6EcMhzAs-xCuS7wrxcUE_F83D1nbPVIWJZU91861ztOOPyR9t2YK0aVSxmrq1Abk32GbRqLa_8xnS1Zx9lATGitw1SwoIxW9b-tLjHOf4KtONu6nSKWxxI0UAtIaMHMdpUrOjQDsMPNQIEjqG-krYFwPnnCGXCoYJybRznB4ETGKmz1faKBnSsIwPSHMe-oMhIKy029q-VXD_Elm-EI3kK6kPqEUg9EtXEKfqqMo4s4y4jEGCTQlZpnCJkEpxzmZIjoDkpAZ-rV2ljblEQH1v_EUvABkqX9fMl3uOUzG8CJ1xnJRjM1NQF8S45jkrwwHb-N5eKbGnIWtYnoGMB7CglS3fEhP1pWAQ4DTjJ1UUv2N0pP-sOYIdNqAyHEmMVIHEp4e8y1VkxK0HyDtg6xnEGGad2HxC42nRxuhQl_ErrYqM5QJlSU-rHlFycazAkHaKZpVTq-GsIbZ_7V4WuTSQoC1P17rtDAf2wna2mfs9zzhw\",\n        URL: \"192.168.0.44:8080/f1webservices/public/api/front-api/\"\n      }\n  };\n  \n  const config = process.env.REACT_APP_STAGE === 'production'\n    ? prod\n    : dev;\n  \n  export default {\n    // Add common config values here\n    MAX_ATTACHMENT_SIZE: 5000000,\n    ...config\n  };","import React, { Component } from 'react'\nclass User extends Component {\n    render() {\n        if (this.props.name && this.props.email && this.props.photo){\n            return (\n                <div>\n                    <img src={ this.props.photo } />\n                    <br/>\n                    <span>Nome: { this.props.name }</span>\n                    <br></br>\n                    <span>Email: { this.props.email }</span>\n                </div>\n            )\n        }else{\n            return (\n                <div>Precisa setar Nome|Email|Photo</div>\n            )\n        }\n    }\n  }\n  \n  export default User;","import React, { Component } from 'react'\nimport User from './User'\nclass Teste extends Component {\n    render() {\n        return (\n            <div>\n                Component REACT\n                <User name=\"Rodrigo Teste\" email=\"teste@react.com\" photo=\"https://git.f1s.me:500/api/v3/users/ssf43zhkqbr878wwrnmhj5cdur/image?time=1563302742681\"></User>\n            </div>\n        )\n    }\n  }\n  \n  export default Teste;","import React, { Component } from 'react'\nimport { client } from './http/client/F1_index'\nclass Product extends Component {\n    constructor(){\n        super()\n        this.state = {data:[]}\n    }\n\n    async componentDidMount(){\n        if (this.props.id){\n            const produtos = await client.get(`/produtos/${this.props.id}`).then(response => { return response })\n            this.setState({ data: produtos.data})\n        }else{\n            const produtos = await client.get(`/produtos`).then(response => { return response })\n            this.setState({ data: produtos.data})\n        }\n    }\n\n    render(){\n        if (this.props.id){\n            const { data } = this.state\n            if(data.dados){\n                return (\n                    <div>{data.dados.detalhe.nome}</div>\n                )\n            }else{\n                return (\n                    <div>deu ruim</div>\n                )\n            }\n        }else{\n            const { data } = this.state\n            if(data.dados){\n                const list = data.dados.map((product) => \n                    <li>{product.detalhe.nome}-{product.id}</li>\n                )\n                return (\n                    <div><ul>{list}</ul></div>\n                )\n            }else{\n                return (\n                    <div>deu ruim</div>\n                )\n            }\n        }\n    }\n  }\n  \n  export default Product;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Teste from './Teste';\nimport Product from './Product';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          TESTE APP REACT Product\n        </p>\n        <Teste></Teste>\n        <Product id=\"60\"></Product>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  console.log(process.env.REACT_APP_API_KEY)\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios')\nconst envProcess = require('../../configs')\n\nconst client = axios.create({\n    baseURL: `http://${envProcess.default.apiGateway.URL}`,\n    headers: {\n        'Authorization': `Bearer ${envProcess.default.apiGateway.KEY}`\n    },\n    timeout: 20000\n})\n\nif (process.env.NODE_ENV !== 'production') {\n    require('axios-debug-log').addLogger(client)\n}\n\nclient.interceptors.request.use((config) => {\n    config.metadata = { startTime: new Date() }\n    return config\n}, (error) => {\n    return Promise.reject(error)\n})\n\n// Intercept all responses\nclient.interceptors.response.use(\n    (response) => {\n        response.error = false\n        return response\n    },\n    (error) => {\n        if(error.code){\n           if(error.code === 'ECONNABORTED'){\n            error.status = 504\n            console.log(error)\n           }\n        }else{\n            console.log(error)\n            error.status = error.response.status\n        }\n        \n        if (error.status === 500) {\n            console.log(error.response)\n            error.data = error.response.data\n        }else if(error.status === 504){\n            console.log(error)\n        }else{\n            error.data = error.response.data\n        }\n        error.error = true\n        return error\n    }\n)\n\nmodule.exports = { client, axios }"],"sourceRoot":""}