{"ast":null,"code":"const axios = require('axios');\n\nconst client = axios.create({\n  baseURL: \"http://\".concat(process.env.URL_F1_API),\n  headers: {\n    'Authorization': \"Bearer \".concat(process.env.API_KEY)\n  },\n  timeout: 20000\n});\n\nif (process.env.NODE_ENV !== 'production') {// require('axios-debug-log').addLogger(client)\n}\n\nclient.interceptors.request.use(config => {\n  config.metadata = {\n    startTime: new Date()\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // Intercept all responses\n\nclient.interceptors.response.use(response => {\n  response.error = false;\n  return response;\n}, error => {\n  if (error.code) {\n    if (error.code == 'ECONNABORTED') {\n      error.status = 504;\n      console.log(error);\n    }\n  } else {\n    error.status = error.response.status;\n  }\n\n  if (error.status === 500) {\n    console.log(error.response);\n    error.data = error.response.data;\n  } else if (error.status === 504) {\n    console.log(error);\n  } else {\n    error.data = error.response.data;\n  }\n\n  error.error = true;\n  return error;\n});\nmodule.exports = {\n  client,\n  axios\n};","map":{"version":3,"sources":["/home/rodrigo.silva/htdocs/curso-react/my-app-1/src/http/client/F1_index.js"],"names":["axios","require","client","create","baseURL","process","env","URL_F1_API","headers","API_KEY","timeout","NODE_ENV","interceptors","request","use","config","metadata","startTime","Date","error","Promise","reject","response","code","status","console","log","data","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,mBAAYC,OAAO,CAACC,GAAR,CAAYC,UAAxB,CADiB;AAExBC,EAAAA,OAAO,EAAE;AACL,sCAA2BH,OAAO,CAACC,GAAR,CAAYG,OAAvC;AADK,GAFe;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAAb,CAAf;;AAQA,IAAIL,OAAO,CAACC,GAAR,CAAYK,QAAZ,KAAyB,YAA7B,EAA2C,CACvC;AACH;;AAEDT,MAAM,CAACU,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAiCC,MAAD,IAAY;AACxCA,EAAAA,MAAM,CAACC,QAAP,GAAkB;AAAEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AAAb,GAAlB;AACA,SAAOH,MAAP;AACH,CAHD,EAGII,KAAD,IAAW;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CALD,E,CAOA;;AACAjB,MAAM,CAACU,YAAP,CAAoBU,QAApB,CAA6BR,GAA7B,CACKQ,QAAD,IAAc;AACVA,EAAAA,QAAQ,CAACH,KAAT,GAAiB,KAAjB;AACA,SAAOG,QAAP;AACH,CAJL,EAKKH,KAAD,IAAW;AACP,MAAGA,KAAK,CAACI,IAAT,EAAc;AACX,QAAGJ,KAAK,CAACI,IAAN,IAAc,cAAjB,EAAgC;AAC/BJ,MAAAA,KAAK,CAACK,MAAN,GAAe,GAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA;AACH,GALD,MAKK;AACDA,IAAAA,KAAK,CAACK,MAAN,GAAeL,KAAK,CAACG,QAAN,CAAeE,MAA9B;AACH;;AAED,MAAIL,KAAK,CAACK,MAAN,KAAiB,GAArB,EAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACG,QAAlB;AACAH,IAAAA,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACG,QAAN,CAAeK,IAA5B;AACH,GAHD,MAGM,IAAGR,KAAK,CAACK,MAAN,KAAiB,GAApB,EAAwB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,GAFK,MAED;AACDA,IAAAA,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACG,QAAN,CAAeK,IAA5B;AACH;;AACDR,EAAAA,KAAK,CAACA,KAAN,GAAc,IAAd;AACA,SAAOA,KAAP;AACH,CAzBL;AA4BAS,MAAM,CAACC,OAAP,GAAiB;AAAE3B,EAAAA,MAAF;AAAUF,EAAAA;AAAV,CAAjB","sourcesContent":["const axios = require('axios')\n\nconst client = axios.create({\n    baseURL: `http://${process.env.URL_F1_API}`,\n    headers: {\n        'Authorization': `Bearer ${process.env.API_KEY}`\n    },\n    timeout: 20000\n})\n\nif (process.env.NODE_ENV !== 'production') {\n    // require('axios-debug-log').addLogger(client)\n}\n\nclient.interceptors.request.use((config) => {\n    config.metadata = { startTime: new Date() }\n    return config\n}, (error) => {\n    return Promise.reject(error)\n})\n\n// Intercept all responses\nclient.interceptors.response.use(\n    (response) => {\n        response.error = false\n        return response\n    },\n    (error) => {\n        if(error.code){\n           if(error.code == 'ECONNABORTED'){\n            error.status = 504\n            console.log(error)\n           }\n        }else{\n            error.status = error.response.status\n        }\n        \n        if (error.status === 500) {\n            console.log(error.response)\n            error.data = error.response.data\n        }else if(error.status === 504){\n            console.log(error)\n        }else{\n            error.data = error.response.data\n        }\n        error.error = true\n        return error\n    }\n)\n\nmodule.exports = { client, axios }"]},"metadata":{},"sourceType":"module"}