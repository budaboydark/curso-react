{"ast":null,"code":"const axios = require('axios');\n\nconsole.log(process.env.REACT_APP_API_KEY);\nconst client = axios.create({\n  baseURL: \"http://\".concat(process.env.URL_F1_API),\n  headers: {\n    'Authorization': \"Bearer \".concat(process.env.API_KEY)\n  },\n  timeout: 20000\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  require('axios-debug-log').addLogger(client);\n}\n\nclient.interceptors.request.use(config => {\n  config.metadata = {\n    startTime: new Date()\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // Intercept all responses\n\nclient.interceptors.response.use(response => {\n  console.log(response);\n  response.error = false;\n  return response;\n}, error => {\n  if (error.code) {\n    if (error.code === 'ECONNABORTED') {\n      error.status = 504;\n      console.log(error);\n    }\n  } else {\n    console.log(error); // error.status = error.response.status\n  }\n\n  if (error.status === 500) {\n    console.log(error.response);\n    error.data = error.response.data;\n  } else if (error.status === 504) {\n    console.log(error);\n  } else {//error.data = error.response.data\n  }\n\n  error.error = true;\n  return error;\n});\nmodule.exports = {\n  client,\n  axios\n};","map":{"version":3,"sources":["/home/rodrigo.silva/htdocs/curso-react/my-app-1/src/http/client/F1_index.js"],"names":["axios","require","console","log","process","env","REACT_APP_API_KEY","client","create","baseURL","URL_F1_API","headers","API_KEY","timeout","NODE_ENV","addLogger","interceptors","request","use","config","metadata","startTime","Date","error","Promise","reject","response","code","status","data","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AACA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACxBC,EAAAA,OAAO,mBAAYL,OAAO,CAACC,GAAR,CAAYK,UAAxB,CADiB;AAExBC,EAAAA,OAAO,EAAE;AACL,sCAA2BP,OAAO,CAACC,GAAR,CAAYO,OAAvC;AADK,GAFe;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAAb,CAAf;;AAQA,IAAIT,OAAO,CAACC,GAAR,CAAYS,QAAZ,KAAyB,YAA7B,EAA2C;AACvCb,EAAAA,OAAO,CAAC,iBAAD,CAAP,CAA2Bc,SAA3B,CAAqCR,MAArC;AACH;;AAEDA,MAAM,CAACS,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAiCC,MAAD,IAAY;AACxCA,EAAAA,MAAM,CAACC,QAAP,GAAkB;AAAEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AAAb,GAAlB;AACA,SAAOH,MAAP;AACH,CAHD,EAGII,KAAD,IAAW;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CALD,E,CAOA;;AACAhB,MAAM,CAACS,YAAP,CAAoBU,QAApB,CAA6BR,GAA7B,CACKQ,QAAD,IAAc;AACVxB,EAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAZ;AACAA,EAAAA,QAAQ,CAACH,KAAT,GAAiB,KAAjB;AACA,SAAOG,QAAP;AACH,CALL,EAMKH,KAAD,IAAW;AACP,MAAGA,KAAK,CAACI,IAAT,EAAc;AACX,QAAGJ,KAAK,CAACI,IAAN,KAAe,cAAlB,EAAiC;AAChCJ,MAAAA,KAAK,CAACK,MAAN,GAAe,GAAf;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA;AACH,GALD,MAKK;AACDrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ,EADC,CAED;AACH;;AAED,MAAIA,KAAK,CAACK,MAAN,KAAiB,GAArB,EAA0B;AACtB1B,IAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAK,CAACG,QAAlB;AACAH,IAAAA,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACG,QAAN,CAAeG,IAA5B;AACH,GAHD,MAGM,IAAGN,KAAK,CAACK,MAAN,KAAiB,GAApB,EAAwB;AAC1B1B,IAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACH,GAFK,MAED,CACD;AACH;;AACDA,EAAAA,KAAK,CAACA,KAAN,GAAc,IAAd;AACA,SAAOA,KAAP;AACH,CA3BL;AA8BAO,MAAM,CAACC,OAAP,GAAiB;AAAExB,EAAAA,MAAF;AAAUP,EAAAA;AAAV,CAAjB","sourcesContent":["const axios = require('axios')\n\nconsole.log(process.env.REACT_APP_API_KEY)\nconst client = axios.create({\n    baseURL: `http://${process.env.URL_F1_API}`,\n    headers: {\n        'Authorization': `Bearer ${process.env.API_KEY}`\n    },\n    timeout: 20000\n})\n\nif (process.env.NODE_ENV !== 'production') {\n    require('axios-debug-log').addLogger(client)\n}\n\nclient.interceptors.request.use((config) => {\n    config.metadata = { startTime: new Date() }\n    return config\n}, (error) => {\n    return Promise.reject(error)\n})\n\n// Intercept all responses\nclient.interceptors.response.use(\n    (response) => {\n        console.log(response)\n        response.error = false\n        return response\n    },\n    (error) => {\n        if(error.code){\n           if(error.code === 'ECONNABORTED'){\n            error.status = 504\n            console.log(error)\n           }\n        }else{\n            console.log(error)\n            // error.status = error.response.status\n        }\n        \n        if (error.status === 500) {\n            console.log(error.response)\n            error.data = error.response.data\n        }else if(error.status === 504){\n            console.log(error)\n        }else{\n            //error.data = error.response.data\n        }\n        error.error = true\n        return error\n    }\n)\n\nmodule.exports = { client, axios }"]},"metadata":{},"sourceType":"module"}